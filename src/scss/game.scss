$breakPoint: 576px;
$breakPointTablet: 768px;

.loaded .target,
.loaded .table-players {
  transition-duration: .3s;
  opacity: 1;
}

.btn-home {
  position: fixed;
  right: 24px;
  top: 24px;
  @media (max-width: $breakPoint) {
    top: auto;
    bottom: 24px;
  }
}

.game-container {
  padding: 0 40px;
  display: flex;
  @media (max-width: $breakPoint) {
    margin-top: var(--gap-normal);
    padding: 0;
    flex-direction: column;
    justify-content: center;
  }
}

.table-players {
  opacity: 0;
  color: var(--text-color);
  margin-top: var(--gap-x-large);
  font-size: 14px;
  position: absolute;

  @media (max-width: $breakPoint) {
    position: static;
    margin-top: var(--gap-normal);
    padding: 0 20px;
    order: 1;
  }
}

.text-game {
  margin-bottom: 12px;
  font-size: 12px;
}


.btn-home {
  font-size: 12px;
  text-decoration: none;
}

.table {
  font-weight: 400;

  &-row {
    position: relative;
    display: grid;
    grid-template: 1fr / 2fr 1fr;
    border-top: 1px solid var(--color-pimary);
    background-color: transparent;
    transition-duration: .3s;

    &:last-child {
      border-bottom: 1px solid var(--color-pimary);
    }

    &.active {
      &:before {
        content: '>';
        position: absolute;
        left: 8px;
        top: 15px;

        @media (max-width: $breakPoint) {
          top: 6px;
        }
      }

      .table-cell {
        background-color: rgba(0, 0, 0, .2);
      }
    }
  }

  &-cell {
    text-align: center;
    padding: var(--gap-normal);
    border-left: 1px solid var(--color-pimary);

    @media (max-width: $breakPoint) {
      padding: var(--gap-small);
      font-size: 12px;
    }

    &:last-child {
      border-right: 1px solid var(--color-pimary);
    }
  }
}

.target-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  --size-canvas: 760px;
  width: var(--size-canvas);
  height: var(--size-canvas);
  margin: 0 auto;

  @media (max-width: 1360px) {
    margin: 0 0 0 auto;
  }
  @media (max-width: $breakPointTablet) {
    --size-canvas: 55vw;
    margin: 0;
  }
  @media (max-width: $breakPoint) {
    --size-canvas: 98vw;
    margin: 0 auto;
  }
}

.target {
  --size-target: 675px;
  width: var(--size-target);
  height: var(--size-target);
  display: flex;
  opacity: 0;
  justify-content: center;
  align-items: center;
  z-index: 2;

  margin: 0 auto;
  border-radius: 50%;
  overflow: hidden;

  @media (max-width: $breakPointTablet) {
    --size-target: 55vw;
  }

  @media (max-width: $breakPoint) {
    //transform: scale(.5);
    --size-target: 85vw;
  }

  &__outer {
    --size-outer: 740px;
    position: absolute;
    border: 40px solid rgb(30, 29, 29);
    border-radius: 50%;
    width: var(--size-outer);
    height: var(--size-outer);
    overflow: hidden;
    z-index: 1;
    cursor: pointer;
    transition-duration: .3s;
    user-select: none;

    @media (max-width: $breakPointTablet) {
      display: none;
    }
    @media (max-width: $breakPoint) {
      --size-outer: 98vw;
      display: block;
      border: 30px solid rgb(30, 29, 29);
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background: url("/img/target.png") 50% 50% no-repeat;
      background-size: 890px;
      opacity: .08;
      pointer-events: none;

      @media (max-width: $breakPoint) {
        display: none;
      }
    }

    &:hover {
      box-shadow: 0 0 15px 0 rgba(0, 0, 0, .5);
    }
  }

  &__single-bull,
  &__bull {
    border: 1px solid rgba(255, 255, 255, .5);
    border-radius: 50%;
    cursor: pointer;
    opacity: .85;
    transition-duration: .3s;
    z-index: 3;

    &:hover {
      opacity: 1;
    }
  }

  &__single-bull {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: green;
    width: 65px;
    height: 65px;
    @media (max-width: $breakPoint) {
      width: 24vw;
      height: 24vw;
    }
  }

  &__bull {
    position: absolute;
    z-index: 3;
    background-color: #ff0202;
    width: 25px;
    height: 25px;
    @media (max-width: $breakPoint) {
      width: 10vw;
      height: 10vw;
    }
  }

}

.target-total {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  top: 0;
  font-size: 24px;
  height: 295px;
  width: 57px;
  color: #fff;
  font-weight: 400;
  z-index: 2;
  user-select: none;

  @media (max-width: $breakPointTablet) {
    top: 6vw;
    height: 12vw;
    width: 6vw;
  }
  @media (max-width: $breakPoint) {
    top: 16vw;
    height: 16vw;
    width: 10vw;
  }

  &:after {
    content: '';
    position: absolute;
    height: 100%;
    right: 0;
    border-right: 1px solid rgba(255, 255, 255, .8);
    transform: rotate(9deg);
  }

  $radius: 32.5px; // радиус круга
  $total-items: 20; // общее количество элементов

  @for $i from 1 through $total-items {
    &:nth-child(#{$i}) {
      $angle: calc(360 / $total-items) * ($i - 1); // угол для текущего элемента в градусах
      $y: 147.5px - 147.5px * cos($angle * (pi / 180)) - $radius * cos($angle * (pi / 180)) + 85px; // вычисляем X
      $x: $radius * sin($angle * (pi / 180)) + 147.5px * sin($angle * (pi / 180)); // вычисляем Y
      transform: translateX(#{$x}) translateY(#{$y}) rotate($angle * 1deg);
    }
  }
  @media (max-width: $breakPointTablet) {
    $radius: 4vw; // радиус круга
    $total-items: 20; // общее количество элементов
    $height: 16vw;

    @for $i from 1 through $total-items {
      &:nth-child(#{$i}) {
        $angle: calc(360 / $total-items) * ($i - 1); // угол для текущего элемента в градусах
        $y: calc($height - $height * cos($angle * (pi / 180)) - $radius * cos($angle * (pi / 180))); // вычисляем X
        $x: calc($radius * sin($angle * (pi / 180)) + $height * sin($angle * (pi / 180))); // вычисляем Y
        transform: translateX(#{$x}) translateY(#{$y}) rotate($angle * 1deg);
      }
    }
  }

  @media (max-width: $breakPoint) {
    $radius: 3vw; // радиус круга
    $total-items: 20; // общее количество элементов
    $height: 29vw;

    @for $i from 1 through $total-items {
      &:nth-child(#{$i}) {
        $angle: calc(360 / $total-items) * ($i - 1); // угол для текущего элемента в градусах
        $y: calc($height - $height * cos($angle * (pi / 180)) - $radius * cos($angle * (pi / 180))); // вычисляем X
        $x: calc($radius * sin($angle * (pi / 180)) + $height * sin($angle * (pi / 180))); // вычисляем Y
        transform: translateX(#{$x}) translateY(#{$y}) rotate($angle * 1deg);
      }
    }
  }

  &__x1,
  &__x2,
  &__x3 {
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    height: 40px;
    width: 50px;
    will-change: transform;
    transition-duration: .3s;
    background: transparent;

    @media (max-width: $breakPointTablet) {
      height: 40px;
      width: 30px;
    }
    @media (max-width: $breakPoint) {
      height: 35px;
      width: 25px;
    }

    &:hover {
      transform: scale(1.25);
      background: radial-gradient(circle, rgba(255, 255, 255, .3) 0%, rgba(0, 0, 0, 0) 60%);
    }
  }

  &__x1 {
    height: 70px;
    @media (max-width: $breakPoint) {
      height: 5vw;
      font-size: 18px;
      margin-bottom: 6px;
    }
  }

  &__x2 {
    font-size: 16px;
    color: green;
    margin-top: -10px;
    @media (max-width: $breakPoint) {
      margin-top: -4px;
      margin-bottom: 6px;
    }
  }

  &__x3 {
    margin-top: 10px;
    font-size: 16px;
    color: #ff0202;

    @media (max-width: $breakPoint) {
      margin-top: 0;
    }
  }

  &:nth-child(n + 7) {
    .target-total {
      &__x1,
      &__x2,
      &__x3 {
        transform: rotate(180deg);

        &:hover {
          transform: rotate(180deg) scale(1.25);
        }
      }
    }
  }

  &:nth-child(n + 16) {
    .target-total {
      &__x1,
      &__x2,
      &__x3 {
        transform: rotate(0);

        &:hover {
          transform: rotate(0) scale(1.25);
        }
      }
    }
  }
}

*:disabled {
  opacity: .5;
  pointer-events: none;
}
.total-back-text {
  display: none;
  position: absolute;
  margin-top: var(--gap-small);

  &.animate {
    display: block;
  }
}
.total-animate__value {
  position: absolute;
  z-index: 5;
  font-size: 10vw;
  font-weight: 400;
  color: var(--text-color);
  pointer-events: none;
  opacity: 0;

  &.animate {
    animation: animateTotal forwards .8s;
  }
}
.total-back-text {
  color: var(--text-color);
}
@keyframes animateTotal {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(1.5);
  }
}